{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"ff11c217-3172-54c8-8023-083e59374c47","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = nightOwl;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Functional Programming, React, and Compilers in ReasonML\"), mdx(\"hr\", null), mdx(Author, {\n    mdxType: \"Author\"\n  }), mdx(\"hr\", null), mdx(TableOfContents, {\n    activeStep: 0,\n    mdxType: \"TableOfContents\"\n  }), mdx(\"hr\", null), mdx(\"h2\", null, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"https://www.vitalsource.com/products/the-functional-approach-to-programming-guy-cousineau-v9781107263796?duration=perpetual&utm_source=bing&utm_medium=cpc&utm_campaign=VST%20Tier%20Three%20Shopping&msclkid=3983b13c94dd139dbcf8efba3a4a3980\"\n  }), \"The Functional Approach to Programming\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Pure functions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Functions as first-class citizens\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Immutability\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"We had SSR\"), mdx(\"small\", null, mdx(\"em\", null, \"Reload page on every request\")), mdx(Image, {\n    src: \"https://sitedown.co/sites/default/files/styles/800px/public/reports/Screen%20shot%202013-11-14%20at%2010.23.34%20PM.png?itok=Yfkg1ag6\",\n    size: 800,\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Along came XHR\"), mdx(\"h1\", null, \"\\uD83D\\uDE11\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Who remembers this?\\\"\",\n    \"title\": \"\\\"Who\",\n    \"remembers\": true,\n    \"this?\\\"\": true\n  }), \"// Configure\\nvar xhr = new XMLHttpRequest();\\nxhr.open(\\\"POST\\\", \\\"/server\\\", true);\\nxhr.setRequestHeader(\\n  \\\"Content-Type\\\",\\n  \\\"application/x-www-form-urlencoded\\\"\\n);\\n\\n// Callback\\nxhr.onreadystatechange = function() {\\n  if (this.readyState === 4 && this.status === 200) {\\n    // Request finished. Do processing here.\\n  }\\n};\\n\\n// Send\\nxhr.send(\\\"page=2&pageSize=10\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:7 title=\\\"Who remembers this?\\\"\",\n    \"1:7\": true,\n    \"title\": \"\\\"Who\",\n    \"remembers\": true,\n    \"this?\\\"\": true\n  }), \"// Configure\\nvar xhr = new XMLHttpRequest();\\nxhr.open(\\\"POST\\\", \\\"/server\\\", true);\\nxhr.setRequestHeader(\\n  \\\"Content-Type\\\",\\n  \\\"application/x-www-form-urlencoded\\\"\\n);\\n\\n// Callback\\nxhr.onreadystatechange = function() {\\n  if (this.readyState === 4 && this.status === 200) {\\n    // Request finished. Do processing here.\\n  }\\n};\\n\\n// Send\\nxhr.send(\\\"page=2&pageSize=10\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"8:15 title=\\\"Who remembers this?\\\"\",\n    \"8:15\": true,\n    \"title\": \"\\\"Who\",\n    \"remembers\": true,\n    \"this?\\\"\": true\n  }), \"// Configure\\nvar xhr = new XMLHttpRequest();\\nxhr.open(\\\"POST\\\", \\\"/server\\\", true);\\nxhr.setRequestHeader(\\n  \\\"Content-Type\\\",\\n  \\\"application/x-www-form-urlencoded\\\"\\n);\\n\\n// Callback\\nxhr.onreadystatechange = function() {\\n  if (this.readyState === 4 && this.status === 200) {\\n    // Request finished. Do processing here.\\n  }\\n};\\n\\n// Send\\nxhr.send(\\\"page=2&pageSize=10\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"15:17 title=\\\"Who remembers this?\\\"\",\n    \"15:17\": true,\n    \"title\": \"\\\"Who\",\n    \"remembers\": true,\n    \"this?\\\"\": true\n  }), \"// Configure\\nvar xhr = new XMLHttpRequest();\\nxhr.open(\\\"POST\\\", \\\"/server\\\", true);\\nxhr.setRequestHeader(\\n  \\\"Content-Type\\\",\\n  \\\"application/x-www-form-urlencoded\\\"\\n);\\n\\n// Callback\\nxhr.onreadystatechange = function() {\\n  if (this.readyState === 4 && this.status === 200) {\\n    // Request finished. Do processing here.\\n  }\\n};\\n\\n// Send\\nxhr.send(\\\"page=2&pageSize=10\\\");\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"jQuery to the rescue\"), mdx(\"h1\", null, \"\\uD83E\\uDD2F\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"How about this?\\\"\",\n    \"title\": \"\\\"How\",\n    \"about\": true,\n    \"this?\\\"\": true\n  }), \"$.ajax({\\n  url: \\\"/profile\\\",\\n  type: \\\"GET\\\",\\n  data: \\\"id=5\\\",\\n  success: function(data) {\\n    // Handle success\\n    $(\\\"#ajax-results\\\").html(data);\\n  },\\n  error: function(e) {\\n    // Handle error\\n  },\\n});\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"But then we got this\\\"\",\n    \"title\": \"\\\"But\",\n    \"then\": true,\n    \"we\": true,\n    \"got\": true,\n    \"this\\\"\": true\n  }), \"$(\\\"#item\\\").css(\\\"color\\\", \\\"#123456\\\");\\n$(\\\"#item\\\").html(\\\"hello\\\");\\n$(\\\"#item\\\").css(\\\"background-color\\\", \\\"#ffffff\\\");\\n\\n// you could use this instead\\n$(\\\"#item\\\")\\n  .css(\\\"color\\\", \\\"#123456\\\")\\n  .html(\\\"hello\\\")\\n  .css(\\\"background-color\\\", \\\"#ffffff\\\");\\n\\n// or even\\nvar item = $(\\\"#item\\\");\\nitem.css(\\\"color\\\", \\\"#123456\\\");\\nitem.html(\\\"hello\\\");\\nitem.css(\\\"background-color\\\", \\\"#ffffff\\\");\\n\\n// as for loops, this is a big no-no\\nconsole.time(\\\"no cache\\\");\\nfor (var i = 0; i < 1000; i++) {\\n  $(\\\"#list\\\").append(i);\\n}\\nconsole.timeEnd(\\\"no cache\\\");\\n\\n// much better this way\\nconsole.time(\\\"cache\\\");\\nvar item = $(\\\"#list\\\");\\n\\nfor (var i = 0; i < 1000; i++) {\\n  item.append(i);\\n}\\nconsole.timeEnd(\\\"cache\\\");\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Save us Angular!\"), mdx(\"p\", null, \"\\uD83E\\uDD7A\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"It was amazing\\\" subtitle=\\\"Organized code, template binding, routing, and services!\\\"\",\n    \"title\": \"\\\"It\",\n    \"was\": true,\n    \"amazing\\\"\": true,\n    \"subtitle\": \"\\\"Organized\",\n    \"code,\": true,\n    \"template\": true,\n    \"binding,\": true,\n    \"routing,\": true,\n    \"and\": true,\n    \"services!\\\"\": true\n  }), \"app.controller(\\\"Ctrl\\\", function($scope) {\\n  this.name = \\\"name\\\";\\n\\n  $scope.$watch(\\n    angular.bind(function() {\\n      return this.title;\\n    }),\\n    function(newVal, oldVal) {}\\n  );\\n});\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"rootScope is evil\\\" subtitle=\\\"Two-way binding is crazy\\\"\",\n    \"title\": \"\\\"rootScope\",\n    \"is\": true,\n    \"evil\\\"\": true,\n    \"subtitle\": \"\\\"Two-way\",\n    \"binding\": true,\n    \"crazy\\\"\": true\n  }), \"var myObject = {\\n  status: 10,\\n};\\n\\n$rootScope.$broadcast(\\\"status_updated\\\", myObject);\\n\\n$rootScope.$on(\\\"status_updated\\\", function(event, obj) {\\n  console.log(obj.status); // 10\\n});\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"#react\"), mdx(\"iframe\", {\n    src: \"https://giphy.com/embed/l0NwKAlZzZ9pyi9fa\",\n    width: \"500\",\n    height: \"400\",\n    frameBorder: \"0\",\n    className: \"giphy-embed\",\n    allowFullScreen: true\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Mind.  Blown.  Again.    🤯\\\"\",\n    \"title\": \"\\\"Mind.\",\n    \" Blown.\": true,\n    \" Again.\": true,\n    \" \": true,\n    \"\": true,\n    \"🤯\\\"\": true\n  }), \"class Username extends React.Component {\\n  render() {\\n    const { firstName, lastName } = this.props;\\n    return (\\n      <h1>\\n        {firstName} {lastName}\\n      </h1>\\n    );\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Component\\\"\",\n    \"title\": \"\\\"Component\\\"\"\n  }), \"class Profile extends React.Component {\\n  componentDidMount() {\\n    this.props.fetchProfile();\\n  }\\n\\n  render() {\\n    // return JSX\\n  }\\n}\\n\\n// Select data from Redux\\nconst mapStateToProps = state => ({\\n  profile: state.profile,\\n});\\n\\n// Connect Action Creators to Redux\\nconst mapDispatchToProps = {\\n  fetchProfile,\\n};\\n\\n// Connect to Redux\\nconst ConnectedProfile = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(Profile);\\n\\nexport default ConnectedProfile;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Actions\\\"\",\n    \"title\": \"\\\"Actions\\\"\"\n  }), \"// Redux Action Creators\\nconst fetchProfileRequest = () => ({\\n  type: \\\"FETCH_PROFILE_REQUEST\\\",\\n  payload: {},\\n});\\n\\nconst fetchProfileSuccess = ({ profile }) => ({\\n  type: \\\"FETCH_PROFILE_SUCCESS\\\",\\n  payload: { profile },\\n});\\n\\nconst fetchProfileFailure = ({ error }) => ({\\n  type: \\\"FETCH_PROFILE_ERROR\\\",\\n  payload: { error },\\n});\\n\\n// Redux Action\\nexport const fetchProfile = ({ id }) => async dispatch => {\\n  dispatch(fetchProfileRequest());\\n  try {\\n    const profile = await profileUtils.getProfile({ id });\\n    fetchProfileSuccess({ profile });\\n  } catch (error) {\\n    fetchProfileFailure({ error });\\n  }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Reducer\\\"\",\n    \"title\": \"\\\"Reducer\\\"\"\n  }), \"// Initial state\\nconst initialState = {\\n  error: null,\\n  loading: false,\\n  profile: null,\\n};\\n\\nexport default reducer = (state = initialState, action) => {\\n  const { type, payload } = action;\\n\\n  switch (type) {\\n    case \\\"FETCH_PROFILE_REQUEST\\\":\\n      return {\\n        ...state,\\n        error: null,\\n        loading: true,\\n        profile: null,\\n      };\\n    case \\\"FETCH_PROFILE_SUCCESS\\\":\\n      return {\\n        ...state,\\n        error: false,\\n        loading: false,\\n        profile: payload.profile,\\n      };\\n    case \\\"FETCH_PROFILE_FAILURE\\\":\\n      return {\\n        ...state,\\n        error: payload.error,\\n        loading: false,\\n        profile: null,\\n      };\\n    default:\\n      return state;\\n  }\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"12:26 title=\\\"Component\\\" subtitle=\\\"Connect to Redux\\\"\",\n    \"12:26\": true,\n    \"title\": \"\\\"Component\\\"\",\n    \"subtitle\": \"\\\"Connect\",\n    \"to\": true,\n    \"Redux\\\"\": true\n  }), \"// Component\\nclass Profile extends React.Component {\\n  componentDidMount() {\\n    this.props.fetchProfile();\\n  }\\n\\n  render() {\\n    // return JSX\\n  }\\n}\\n\\n// Select data from Redux\\nconst mapStateToProps = state => ({\\n  profile: state.profile,\\n});\\n\\n// Connect Action Creators to Redux\\nconst mapDispatchToProps = {\\n  fetchProfile,\\n};\\n\\n// Connect to Redux\\nconst ConnectedProfile = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(Profile);\\n\\nexport default ConnectedProfile;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"15:26 title=\\\"Actions\\\" subtitle=\\\"Higher-order async function via redux-thunk\\\"\",\n    \"15:26\": true,\n    \"title\": \"\\\"Actions\\\"\",\n    \"subtitle\": \"\\\"Higher-order\",\n    \"async\": true,\n    \"function\": true,\n    \"via\": true,\n    \"redux-thunk\\\"\": true\n  }), \"// Redux Action Creators\\nconst fetchProfileRequest = () => ({\\n  type: \\\"FETCH_PROFILE_REQUEST\\\",\\n  payload: {},\\n});\\n\\nconst fetchProfileSuccess = ({ profile }) => ({\\n  type: \\\"FETCH_PROFILE_SUCCESS\\\",\\n  payload: { profile },\\n});\\n\\nconst fetchProfileFailure = ({ error }) => ({\\n  type: \\\"FETCH_PROFILE_ERROR\\\",\\n  payload: { error },\\n});\\n\\n// Redux Action\\nexport const fetchProfile = ({ id }) => async dispatch => {\\n  dispatch(fetchProfileRequest());\\n  try {\\n    const profile = await profileUtils.getProfile({ id });\\n    fetchProfileSuccess({ profile });\\n  } catch (error) {\\n    fetchProfileFailure({ error });\\n  }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"6:36 title=\\\"Reducer\\\" subtitle=\\\"Handle state updates from dispatched events\\\"\",\n    \"6:36\": true,\n    \"title\": \"\\\"Reducer\\\"\",\n    \"subtitle\": \"\\\"Handle\",\n    \"state\": true,\n    \"updates\": true,\n    \"from\": true,\n    \"dispatched\": true,\n    \"events\\\"\": true\n  }), \"// Initial state\\nconst initialState = {\\n  error: null,\\n  loading: false,\\n  profile: null,\\n};\\n\\nexport default reducer = (state = initialState, action) => {\\n  const { type, payload } = action;\\n\\n  switch (type) {\\n    case \\\"FETCH_PROFILE_REQUEST\\\":\\n      return {\\n        ...state,\\n        error: null,\\n        loading: true,\\n        profile: null,\\n      };\\n    case \\\"FETCH_PROFILE_SUCCESS\\\":\\n      return {\\n        ...state,\\n        error: false,\\n        loading: false,\\n        profile: payload.profile,\\n      };\\n    case \\\"FETCH_PROFILE_FAILURE\\\":\\n      return {\\n        ...state,\\n        error: payload.error,\\n        loading: false,\\n        profile: null,\\n      };\\n    default:\\n      return state;\\n  }\\n};\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Same fundamental problems\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Consume APIs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Manage frontend state\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keep moving forward\"))), mdx(\"hr\", null), mdx(TableOfContents, {\n    activeStep: 1,\n    mdxType: \"TableOfContents\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"GraphQL\"), mdx(\"p\", null, \"Spec released by Facebook in 2015\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Shift to mobile\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"High network usage\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Interconnected data\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nordicapis.com/interview-with-graphql-co-creator-lee-byron/\"\n  }), \"Interview with Lee Byron (Co-creator GraphQL)\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"It's a spec, not code\"), mdx(\"hr\", null), mdx(\"h1\", null, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"https://landscape.graphql.org/category=graph-ql-adopter&format=card-mode&grouping=category\"\n  }), \"HEAVY adoption\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Shift to mobile\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"News Feed on iOS app\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Less powerful devices\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Flaky networks\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"High network usage\"), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"REST Request /profile\\\"\",\n    \"title\": \"\\\"REST\",\n    \"Request\": true,\n    \"/profile\\\"\": true\n  }), \"{\\n  id: 1,\\n  age: 29,\\n  firstName: 'John',\\n  lastName: 'Smith',\\n  nationality: 'Canadian',\\n  mothersMaidenName: 'Johnson',\\n  fathersFirstPet: 'Goldy the goldfish',\\n  email: 'john.smith@email.com',\\n  interests: ['Skiing', 'Comic Books'],\\n  profilePictureUrl: 'https://thispersondoesnotexist.com/',\\n  relationshipStatus: {\\n    status: \\\"its_complicated\\\",\\n    partner: {\\n      firstName: 'Jessica',\\n      lastname: 'Thompson',\\n      age: 30,\\n      nationality: 'American'\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"What we actually need\\\"\",\n    \"title\": \"\\\"What\",\n    \"we\": true,\n    \"actually\": true,\n    \"need\\\"\": true\n  }), \"{\\n  id: 1,\\n  firstName: 'John',\\n  lastName: 'Smith',\\n  profilePictureUrl: 'https://thispersondoesnotexist.com/'\\n}\\n\")), mdx(SimpleProfilePlaceholder, {\n    mdxType: \"SimpleProfilePlaceholder\"\n  }))), mdx(\"hr\", null), mdx(\"h1\", null, \"Interconnected data\"), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"GET /users\\\"\",\n    \"title\": \"\\\"GET\",\n    \"/users\\\"\": true\n  }), \"[\\n  { id: 1, firstName: \\\"John\\\" },\\n  { id: 2, firstName: \\\"Sarah\\\" },\\n  { id: 3, firstName: \\\"Julia\\\" },\\n];\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"GET /blog-posts\\\"\",\n    \"title\": \"\\\"GET\",\n    \"/blog-posts\\\"\": true\n  }), \"[\\n  { id: 1, authorId: 2 },\\n  { id: 2, authorId: 2 },\\n  { id: 3, authorId: 3 },\\n];\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Connect\\\" subtitle=\\\"This isn't just annoying, it can have runtime perf issues\\\"\",\n    \"title\": \"\\\"Connect\\\"\",\n    \"subtitle\": \"\\\"This\",\n    \"isn't\": true,\n    \"just\": true,\n    \"annoying,\": true,\n    \"it\": true,\n    \"can\": true,\n    \"have\": true,\n    \"runtime\": true,\n    \"perf\": true,\n    \"issues\\\"\": true\n  }), \"const getUserProfileForBlogPost = postId => {\\n  // Traverse Blog Posts\\n  const author = blogPosts.find(post => post.id === postId);\\n\\n  // Traverse users\\n  const user = users.find(user => user.id === author.id);\\n\\n  return user;\\n};\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Other problems too!\"), mdx(\"p\", null, \"Developer Communication\"), mdx(\"iframe\", {\n    src: \"https://giphy.com/embed/9xm2Ihyd7Mmy7nbCu7\",\n    width: \"700\",\n    height: \"500\",\n    frameBorder: \"0\",\n    className: \"giphy-embed\",\n    allowFullScreen: true\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Other problems too!\"), mdx(\"p\", null, \"Documentation\"), mdx(\"iframe\", {\n    src: \"https://giphy.com/embed/iGvWZBfhOmBKEtWJmF\",\n    width: \"500\",\n    height: \"500\",\n    frameBorder: \"0\",\n    className: \"giphy-embed\",\n    allowFullScreen: true\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"GraphQL can help\"), mdx(\"hr\", null), mdx(TableOfContents, {\n    activeStep: 2,\n    mdxType: \"TableOfContents\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Core Tenets\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"One endpoint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Query connected data\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Strongly enforced contract\"))), mdx(\"hr\", null), mdx(OneEndpoint, {\n    mdxType: \"OneEndpoint\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"GraphQL Schema (Backend)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"TypeDefs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Resolvers\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"TypeDefs\"), mdx(\"p\", null, \"The definition of what a GraphQL API exposes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Input Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Output Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Queries (GET)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mutations (PUT, PATCH, POST, DELETE)\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  firstName: String!\\n  lastName: String!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"// Nothing yet\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"// Nothing yet\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  title: String!\\n  content: String!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"// Nothing yet\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"// Nothing yet\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"query {\\n  author(id: 1) {\\n    fullName\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"4 title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"query {\\n  author(id: 1) {\\n    fullName\\n    blogPosts {\\n      title\\n    }\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"4 title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"query {\\n  author(id: 1) {\\n    fullName\\n    blogPosts {\\n      title\\n    }\\n  }\\n}\\n\\n// Results\\n{\\n  author: {\\n    fullName: 'John Smith',\\n    blogPosts: [\\n      { title: 'Software Development 101' },\\n      { title: 'Software Development 102' }\\n    ]\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"query {\\n  blogPost(id: 1) {\\n    title\\n    author {\\n      age\\n      lastName\\n    }\\n  }\\n}\\n\\n// Results\\n{\\n  blogPost: {\\n    title: 'Software Development 101'\\n    author: {\\n      age: 29,\\n      lastName: 'Smith'\\n    }\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\\ntype Mutation {\\n  updateBlogPost(????): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"// Nothing here yet\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\\ninput UpdateBlogPostInput {\\n  id: ID!\\n  title: String\\n  content: String\\n}\\n\\ntype Mutation {\\n  updateBlogPost(input: UpdateBlogPostInput!): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Client\\\"\",\n    \"title\": \"\\\"Client\\\"\"\n  }), \"mutation {\\n  updateBlogPost(input: { id: 1, title: \\\"This is a new title\\\" }) {\\n    title\\n    id\\n  }\\n}\\n\\n// Results\\n{\\n  blogPost: {\\n    id: 1\\n    title: 'This is a new title'\\n  }\\n}\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Not magic\"), mdx(\"p\", null, \"Because we need to write \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolvers\")), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\\ninput UpdateBlogPostInput {\\n  id: ID!\\n  title: String\\n  content: String\\n}\\n\\ntype Mutation {\\n  updateBlogPost(input: UpdateBlogPostInput!): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Resolvers\\\"\",\n    \"title\": \"\\\"Resolvers\\\"\"\n  }), \"const resolvers = {\\n  Query: {\\n    author: async (parent, args, context, info) => {\\n      const user = await UserModel.findById(args.id);\\n      return user;\\n    },\\n    blogPost: async (parent, args, context, info) => {\\n      const blogPost = await BlogPostModel.findById(\\n        args.id\\n      );\\n      return blogPost;\\n    },\\n  },\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\\ninput UpdateBlogPostInput {\\n  id: ID!\\n  title: String\\n  content: String\\n}\\n\\ntype Mutation {\\n  updateBlogPost(input: UpdateBlogPostInput!): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Resolvers\\\"\",\n    \"title\": \"\\\"Resolvers\\\"\"\n  }), \"const resolvers = {\\n  User: {\\n    fullName: (parent, args, context, info) =>\\n      `${parent.firstName} ${parent.lastName}`,\\n    blogPosts: async (parent, args, context, info) => {\\n      return await BlogPostModel.find({ authorId: parent.id })\\n    }\\n  },\\n  BlogPost: {\\n    author: (parent) => {\\n      return await UserModel.findById(parent.authorId)\\n    }\\n  },\\n  Query: {\\n    author: async (parent, args, context, info) => {\\n      const user = await UserModel.findById(args.id);\\n      return user;\\n    },\\n    blogPost: async (parent, args, context, info) => {\\n      const blogPost = await BlogPostModel.findById(\\n        args.id\\n      );\\n      return blogPost;\\n    },\\n  },\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"TypeDefs\\\"\",\n    \"title\": \"\\\"TypeDefs\\\"\"\n  }), \"type User {\\n  id: ID!\\n  age: Int\\n  blogPosts: [BlogPost]!\\n  firstName: String!\\n  lastName: String!\\n  fullName: String!\\n}\\n\\ntype BlogPost {\\n  id: ID!\\n  author: User!\\n  title: String!\\n  content: String!\\n}\\n\\ntype Query {\\n  author(id: ID!): User!\\n  blogPost(id: ID!): BlogPost!\\n}\\n\\ninput UpdateBlogPostInput {\\n  id: ID!\\n  title: String\\n  content: String\\n}\\n\\ntype Mutation {\\n  updateBlogPost(input: UpdateBlogPostInput!): BlogPost!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Resolvers\\\"\",\n    \"title\": \"\\\"Resolvers\\\"\"\n  }), \"const resolvers = {\\n  User: {\\n    fullName: (parent, args, context, info) =>\\n      `${parent.firstName} ${parent.lastName}`,\\n    blogPosts: async (parent, args, context, info) => {\\n      return await BlogPostModel.find({ authorId: parent.id })\\n    }\\n  },\\n  BlogPost: {\\n    author: (parent) => {\\n      return await UserModel.findById(parent.authorId)\\n    }\\n  },\\n  Query: {\\n    author: async (parent, args, context, info) => {\\n      const user = await UserModel.findById(args.id);\\n      return user;\\n    },\\n    blogPost: async (parent, args, context, info) => {\\n      const blogPost = await BlogPostModel.findById(\\n        args.id\\n      );\\n      return blogPost;\\n    },\\n  },\\n  Mutation: {\\n    updateBlogPost: () => {\\n      // Code to update a blog post\\n    }\\n  }\\n};\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"TypeDefs + Resolvers = Schema\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enforce a strict contract\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Consumer-focused\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"A whole bunch of other stuff\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enums, Directives, Scalars, Unions, Interfaces, Subscriptions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Authentication, Authorization, Cost Analysis, N + 1\"))), mdx(\"hr\", null), mdx(TableOfContents, {\n    activeStep: 3,\n    mdxType: \"TableOfContents\"\n  }), mdx(\"hr\", null), mdx(ClientAlternatives, {\n    mdxType: \"ClientAlternatives\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Apollo GraphQL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesandbox.io/s/painless-development-with-graphql-luij2\"\n  }), \"Apollo Server\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Apollo Client\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.apollographql.com/platform/\"\n  }), \"Apollo Graph Manager\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Apollo Client\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Centralized config\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Requests\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Components\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Caching\"))), mdx(\"hr\", null), mdx(MountingExample, {\n    mdxType: \"MountingExample\"\n  }), mdx(\"hr\", null), mdx(OnDemandExample, {\n    mdxType: \"OnDemandExample\"\n  }), mdx(\"hr\", null), mdx(MutationExample, {\n    mdxType: \"MutationExample\"\n  }), mdx(\"hr\", null), mdx(QueryAndMutationExample, {\n    mdxType: \"QueryAndMutationExample\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"This is amazing\"), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Component\\\"\",\n    \"title\": \"\\\"Component\\\"\"\n  }), \"// Component\\nclass Profile extends React.Component {\\n  componentDidMount() {\\n    this.props.fetchProfile();\\n  }\\n\\n  render() {\\n    // return JSX\\n  }\\n}\\n\\n// Select data from Redux\\nconst mapStateToProps = state => ({\\n  profile: state.profile,\\n});\\n\\n// Connect Action Creators to Redux\\nconst mapDispatchToProps = {\\n  fetchProfile,\\n};\\n\\n// Connect to Redux\\nconst ConnectedProfile = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(Profile);\\n\\nexport default ConnectedProfile;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Actions\\\"\",\n    \"title\": \"\\\"Actions\\\"\"\n  }), \"// Redux Action Creators\\nconst fetchProfileRequest = () => ({\\n  type: \\\"FETCH_PROFILE_REQUEST\\\",\\n  payload: {},\\n});\\n\\nconst fetchProfileSuccess = ({ profile }) => ({\\n  type: \\\"FETCH_PROFILE_SUCCESS\\\",\\n  payload: { profile },\\n});\\n\\nconst fetchProfileFailure = ({ error }) => ({\\n  type: \\\"FETCH_PROFILE_ERROR\\\",\\n  payload: { error },\\n});\\n\\n// Redux Action\\nexport const fetchProfile = ({ id }) => async dispatch => {\\n  dispatch(fetchProfileRequest());\\n  try {\\n    const profile = await profileUtils.getProfile({ id });\\n    fetchProfileSuccess({ profile });\\n  } catch (error) {\\n    fetchProfileFailure({ error });\\n  }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Reducer\\\"\",\n    \"title\": \"\\\"Reducer\\\"\"\n  }), \"// Initial state\\nconst initialState = {\\n  error: null,\\n  loading: false,\\n  profile: null,\\n};\\n\\nexport default reducer = (state = initialState, action) => {\\n  const { type, payload } = action;\\n\\n  switch (type) {\\n    case \\\"FETCH_PROFILE_REQUEST\\\":\\n      return {\\n        ...state,\\n        error: null,\\n        loading: true,\\n        profile: null,\\n      };\\n    case \\\"FETCH_PROFILE_SUCCESS\\\":\\n      return {\\n        ...state,\\n        error: false,\\n        loading: false,\\n        profile: payload.profile,\\n      };\\n    case \\\"FETCH_PROFILE_FAILURE\\\":\\n      return {\\n        ...state,\\n        error: payload.error,\\n        loading: false,\\n        profile: null,\\n      };\\n    default:\\n      return state;\\n  }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Apollo + Hooks\\\" subtitle=\\\"No overfetching, no state management, localized state\\\"\",\n    \"title\": \"\\\"Apollo\",\n    \"+\": true,\n    \"Hooks\\\"\": true,\n    \"subtitle\": \"\\\"No\",\n    \"overfetching,\": true,\n    \"no\": true,\n    \"state\": true,\n    \"management,\": true,\n    \"localized\": true,\n    \"state\\\"\": true\n  }), \"const template = gql`\\n  query {\\n    me {\\n      firstName\\n    }\\n  }\\n`;\\n\\nconst { data, error, loading } = useQuery(template);\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"So much faster\"), mdx(\"p\", null, \"(Blog Posts with createdAt & views)\"), mdx(\"hr\", null), mdx(QueryAndMutationExample, {\n    mdxType: \"QueryAndMutationExample\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"What do we have?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Strong contract\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Centralized config\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"No overfetching\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Automatic\"), \" state management\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"What else?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The first time you do this, it's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"really\"), \" hard\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Bunch of extras to productionize an API\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Thank you + Q&A\"), mdx(\"iframe\", {\n    src: \"https://giphy.com/embed/IcGkqdUmYLFGE\",\n    width: \"800\",\n    height: \"500\",\n    frameBorder: \"0\",\n    className: \"giphy-embed\",\n    allowFullScreen: true\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://thecodeboss.dev/2016/12/core-functional-programming-concepts/\"\n  }), \"https://thecodeboss.dev/2016/12/core-functional-programming-concepts/\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"ff11c217-3172-54c8-8023-083e59374c47","slug":"","title":"Functional Programming, React, and Compilers in ReasonML"}}}